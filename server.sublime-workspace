{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"creatio",
				"creationFunctions"
			],
			[
				"avail",
				"availableHand"
			],
			[
				"ava",
				"availableHand"
			],
			[
				"items",
				"itemsChecker"
			],
			[
				"low",
				"toLowerCase"
			],
			[
				"split",
				"splitField"
			],
			[
				"spli",
				"splitField"
			],
			[
				"comm",
				"commandExists"
			],
			[
				"confi",
				"configureWorld"
			],
			[
				"toca",
				"toUpperCase"
			],
			[
				"property",
				"propertyName"
			],
			[
				"original",
				"originalObj"
			],
			[
				"successful",
				"successfully"
			],
			[
				"targe",
				"targetsdb"
			],
			[
				"cmd",
				"cmdArray"
			],
			[
				"char",
				"charAt"
			],
			[
				"user",
				"Username"
			],
			[
				"sess",
				"session"
			],
			[
				"fix",
				"fixedUsername"
			],
			[
				"capi",
				"Capitalize"
			],
			[
				"session",
				"sessionSave"
			],
			[
				"cook",
				"cookieParser"
			],
			[
				"ses",
				"sessioID"
			],
			[
				"par",
				"parseSignedCookie"
			],
			[
				"ke",
				"keyCode"
			],
			[
				"cur",
				"curCommandIndex"
			]
		]
	},
	"buffers":
	[
		{
			"file": "server.js",
			"settings":
			{
				"buffer_size": 11163,
				"line_ending": "Windows"
			}
		},
		{
			"file": "commands.js",
			"settings":
			{
				"buffer_size": 68806,
				"line_ending": "Windows"
			}
		},
		{
			"file": "playerFunctions.js",
			"settings":
			{
				"buffer_size": 19540,
				"line_ending": "Windows"
			}
		},
		{
			"file": "adminFunctions.js",
			"settings":
			{
				"buffer_size": 13890,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/*  \n *  Operations do minor calculations,\n *  have safeguards against unexpected arguments,\n *  and always return an expected result.\n */\n\n// Capitalize first letter of a string, and return the resulting string.\nfunction upperFirst(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// Shorthand for Object.prototype.toString.call()\n// Options: [object Array], [object String], [object Object], [object Number],\n//          [object Undefined], [object Date], [object Math], [object Null]\nfunction toType(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\n// Takes a position object, for example: { 'x': 0, 'y': 0, 'z': 0 }\n// and convert it into a string of '0x0y0z', which is how rooms are refered to.\nfunction strPos(pos) {\n  return pos.x + 'x' + pos.y + 'y' + pos.z + 'z';\n}\n\n// Return a real object made from a dotted object notation \n// string 'object.property1.property2', optionally with a value for the last property.\n// Returns false if invalid string, such as '.property'.\nfunction objDotted(str, val) {\n  var makeObject = {};\n  var sortArr = [];\n  var dotSplit = str.split('.');\n  \n  // Must not start empty, such as '.property'.\n  if (dotSplit[0] == '') {\n    return false;\n  }\n  \n  // Otherwise, make an object.\n  if (dotSplit[1]) {\n    for (var i=0; i < dotSplit.length; i++) {\n      if (i == 0) {\n        sortArr[0] = {};\n        continue;\n      }\n      \n      // If not last property.\n      if (i != dotSplit.length - 1) {\n        sortArr[i-1][dotSplit[i]] = {};\n        sortArr[i] = sortArr[i-1][dotSplit[i]];\n      } else {\n        // Last one, then insert value.\n        sortArr[i-1][dotSplit[i]] = val;\n        makeObject[dotSplit[0]] = sortArr[0];\n        return makeObject;\n      }\n    }\n  } else {\n    // Nothing after the first dot.\n    makeObject[dotSplit[0]] = val;\n    return makeObject;\n  }\n}\n\n// Update existing properties, and create non-existing properties,\n// if upsert is requested. Recursively changes the original object,\n// returning nothing.\nfunction updateObj(originalObj, newObj, upsert) {\n  // Ascertain that upsert is defined.\n  if (upsert == undefined) {\n    var upsert = false;\n  }\n  \n  for (var propertyName in newObj) {\n    var curProperty = newObj[propertyName];\n    \n    // Update an existing property, or create a new one.\n    if (originalObj[property]) {\n      // Recursively copy Object and Array properties.\n      if (toType(curProperty) != '[object Array]' && toType(curProperty) != '[object Object]') {\n        updateObj(originalObj[property], curProperty, upsert);\n      }\n      \n      // Otherwise, just reference the value.\n      originalObj[property] = curProperty;\n    } else if (upsert){\n      // Create new property, only if upsert is requested.\n      originalObj[property] = curProperty;\n    }\n  }\n}\n\n// Copies Object & Array types recursively,\n// and directly references the value of any other object type.\nfunction copyObj(originalObj) {\n  var copiedObj;\n  \n  // Handle each object type case.\n  if (toType(originalObj) == '[object Object]') {\n    copiedObj = {};\n    \n    for (var propertyName in originalObj) {\n    var curProperty = originalObj[propertyName];\n    \n    // Recursively copy Object and Array properties.\n    if (toType(curProperty) == '[object Object]' || toType(curProperty) == '[object Array]') {\n      copiedObj[propertyName] = copyObj(curProperty);\n      continue;\n    }\n    \n    // Otherwise, just reference the value.\n    copiedObj[propertyName] = curProperty;\n  }\n  } else if (toType(originalObj) == '[object Array]') {\n    copiedObj = [];\n    \n    for (var i = 0; i < originalObj.length; i++) {\n      var curProperty = originalObj[i];\n      \n      // Recursively copy Object and Array properties.\n      if (toType(curProperty) == '[object Object]' || toType(curProperty) == '[object Array]') {\n        copiedObj[propertyName] = copyObj(curProperty);\n        continue;\n      }\n    \n      // Otherwise, just reference the value.\n      copiedObj[propertyName] = curProperty;\n    }\n  } else {\n    copiedObj = curProperty;\n  }\n  \n  return copiedObj;\n}\n\n// Locates a property insides an object, receiving a dotted string,\n// such as 'property.property.property', and returns an array with\n// the reference to its' parent and property name [parentRef, propetyName],\n// if it exists, or false, if not found.\nfunction hasProperty(obj, propertyStr) {\n  var splitField = propertyStr.split('.');\n  console.log(obj[splitField[0]]);\n  // Parent is obj, itself.\n  if (!splitField[1]) {\n    if (obj[splitField[0]] == undefined) return false;\n    \n    return [obj, splitField[0]];\n  }\n  \n  // Get last field in the string.\n  // Use an array to convert dotted string into object representation.\n  var objArray = [];\n  for (var i=0; i < splitField.length; i++) {\n    // First item.\n    if (i == 0) {\n      // Property not found.\n      if (obj[splitField[0]] == undefined) return false;\n      \n      objArray[0] = obj[splitField[0]];\n      continue;\n    }\n    \n    // Last item.\n    if (i == splitField.length - 1) {\n      objArray[i] = objArray[i-1][splitField[i]];\n      \n      // Last property doesn't exist.\n      if (objArray[i] == undefined) return false;\n      \n      return [objArray[i-1], splitField[i]];\n    }\n    \n    objArray[i] = objArray[i-1][splitField[i]];\n    \n    // Property not found.\n    if (objArray[i] == undefined) return false;\n  }\n}\n\n// First character is upper-case, while the rest are lower-case.\n// Returns re-cased name.\nfunction caseName(name) {\n  var casedName = name.toLowerCase(); // Lowercase the name string.\n  casedName = upperFirst(casedName); // Only first character.\n  return casedName;\n}\n\n// Target names (pre, post, name) and rooms titles must only contain letters,\n// optionally with spaces. First letter must be capital. Certains words must\n// always be lower-case, except the first word.\n// Returns the parsed name on success, or false on failure.\nfunction parseName(name) {\n  // Remove whitespaces from start and end.\n  name = name.trim();\n  // No more than one whitespace, at a time.\n  name = name.replace(/\\s+/g, ' ');\n  \n  // Only English alphabet and spaces allowed. Can't be only spaces.\n  if (name.search(/[^A-Za-z ]/) >= 0 || name == '') {\n    return false;\n  }\n  \n  // The following words must always be in lower-case.\n  var lcWords = ['a', 'an', 'the', 'for', 'and', 'nor', 'but', 'or', 'yet', 'so', \n                 'at', 'by', 'on', 'of', 'to', 'as', 'en', 'per', 'vs', 'via', 'de',\n                 'du', 'von', 'et', 'le', 'la', 'il', 'der', 'af', 'til', 'dit',\n                 'del', 'zu', 'und', 'di', 'av'];\n  \n  var nameArr = name.split(' ');\n  \n  for (var i=0; i < nameArr.length; i++) {\n    // First and last words must be treated as names.\n    if (i == 0 || i == nameArr.length-1) {\n      nameArr[i] = upperFirst(nameArr[i]);\n      continue;\n    }\n    \n    nameArr[i] = nameArr[i].toLowerCase();\n    \n    // Check against lcWords array.\n    if (lcWords.indexOf(nameArr[i]) >= 0) {\n      nameArr[i] = nameArr[i].toLowerCase();\n      continue;\n    }\n    \n    // Otherwise, treat as name.\n    nameArr[i] = upperFirst(nameArr[i]);\n  }\n  \n  name = nameArr.join(' ');\n  \n  return name;\n}\n\n// Returns the pre + name + post joined strings of a player or target,\n// without empty spaces, if any does not exist or is empty.\nfunction fullName(target) {\n  // Either a user or a target.\n  if (target.player) {\n    return (target.player.pre ? target.player.pre + ' ' : '') + target.player.name + \n                                (target.player.post ? ' ' + target.player.post : '');\n  } else {\n    return (target.pre ? target.pre + ' ' : '') + target.name + \n                                (target.post ? ' ' + target.post : '');\n  }\n}\n\n// Returns the fullName() + the strTarget() or + '[USERNAME]',\n// if the fullName() is different from the username, otherwise only the fullName() returns.\nfunction fullNameID(target) {\n  var result = fullName(target);\n  \n  // Either a user or a target.\n  if (target.player) {\n    var username = '';\n    if (result != target.account.username) {\n      username = ' [' + target.account.username + ']';\n    }\n    \n    result = result + username;\n  } else {\n    result = result + ' [' + strTarget(target) + ']';\n  }\n  \n  return result;\n}\n\n// Check that username is under the character limit,\n// and is only composed of a-z & A-Z letters.\n// Returns a message string on error, or false if no problem.\nfunction parseUsername(username) {\n  // Username size limit is 15 characters!\n  if (username.length > 15) {\n    return '<i>Username too long! Please, keep it under fifteen characters.</i>';\n  }\n\n  // Only English alphabet allowed.\n  if (username.search(/[^A-Za-z]/) >= 0) {\n    return '<i>Username must be one word, composed of English letters, only!</i>';\n  }\n\n  return false; // No problem.\n}\n\n// Converts a direction string to a position object.\n// For example: 'nw' returns { 'x': curPos.x - 1, 'y': curPos.y + 1, 'z': curPos.z }.\n// An unavailable option returns false.\nfunction posDir(curPos, dir) {\n  // Options: n, s, e, w | nw ,ne , sw, se | u, d\n  switch(dir) {\n    case 'n':\n      newPos = { 'x': curPos.x, 'y': curPos.y + 1, 'z': curPos.z };\n      break;\n    \n    case 's':\n      newPos = { 'x': curPos.x, 'y': curPos.y - 1, 'z': curPos.z };\n      break;\n    \n    case 'e':\n      newPos = { 'x': curPos.x + 1, 'y': curPos.y, 'z': curPos.z };\n      break;\n    \n    case 'w':\n      newPos = { 'x': curPos.x - 1, 'y': curPos.y, 'z': curPos.z };\n      break;\n    \n    case 'nw':\n      newPos = { 'x': curPos.x - 1, 'y': curPos.y + 1, 'z': curPos.z };\n      break;\n    \n    case 'ne':\n      newPos = { 'x': curPos.x + 1, 'y': curPos.y + 1, 'z': curPos.z };\n      break;\n    \n    case 'sw':\n      newPos = { 'x': curPos.x - 1, 'y': curPos.y - 1, 'z': curPos.z };\n      break;\n    \n    case 'se':\n      newPos = { 'x': curPos.x + 1, 'y': curPos.y - 1, 'z': curPos.z };\n      break;\n    \n    case 'u':\n      newPos = { 'x': curPos.x, 'y': curPos.y, 'z': curPos.z + 1 };\n      break;\n    \n    case 'd':\n      newPos = { 'x': curPos.x, 'y': curPos.y, 'z': curPos.z - 1 };\n      break;\n    \n    default:\n      return false;\n  }\n  \n  return newPos;\n}\n\n// Return the 'ID.INSTANCE' representation of a target.\nfunction strTarget(target) {\n  return target['_id'] + '.' + target.instance;\n}\n\n// Parses a string that represents a target,\n// so that it returns as 'ID.INSTANCE'.\n// Returns false if string is Not a Number.\nfunction parseTarget(target) {\n  if (isNaN(target)) {\n    return false;\n  }\n  \n  var idInst = target.split('.');\n  \n  // Default empty string (id or instance) to '0'.\n  if (idInst[0] == '') {\n    idInst[0] = '0';\n  }\n  if (!idInst[1] || idInst[1] == '') {\n    idInst[1] = '0';\n  }\n  var properTarget = idInst.join('.'); // Turn back into proper string.\n  \n  return properTarget;\n}\n\n// Verifies that a target has the 'worn' property filled,\n// and returns true if so, or false if not so.\nfunction verifyWearable(target) {\n  if (!target.worn || JSON.stringify(target.worn) == '{}') {\n    return false;\n  }\n  \n  // Otherwise.\n  return true;\n}\n\n// Assert if a location on an object (user, target, room, etc')\n// does't exist or is empty. Returns true if empty, or false otherwise.\nfunction locationEmpty(location) {\n  if (!location || JSON.stringify(location) == '{}' || JSON.stringify(location) == '[]') {\n    return true;\n  }\n  \n  // Otherwise.\n  return false;\n}\n\n// Update the world.users reference, and the basic user properties:\n// account, player, ['_id'], name.\nfunction updateUser(user, newUser) {\n  delete world.users[user.account.username]; // Clean up world.users.\n  \n  if (newUser['_id']) {\n    // Full user. Only the top properties are replaced,\n    // to keep the same reference for variable user.\n    user.account = newUser.account;\n    user.player = newUser.player;\n    user['_id'] = newUser['_id'];\n  } else {\n    // Only name.\n    user.account.username = newUser.account.username;\n    user.player.name = newUser.player.name;\n  }\n  \n  // Update extra properties.\n  user.name = fullName(user); // pre + name + post.\n  \n  // Update world.users reference.\n  world.users[user.account.username] = user;\n}\n\n// Returns a reference to an existing command, or false,\n// with optional access level, to restrict the search.\nfunction commandExists(cmd, access) {\n  // Search according to access level.\n  switch (access) {\n    case 'god':\n      for (var category in commands) {\n        var curCategory = commands[category];\n        \n        if (curCategory[cmd]) {\n          return curCategory[cmd];\n        }\n      }\n      break;\n    \n    case 'builder':\n      for (var category in commands) {\n        // Skip god commands.\n        if (category == 'god') {\n          continue;\n        }\n        \n        var curCategory = commands[category].descriptions;\n        \n        if (curCategory[cmd]) {\n          return curCategory[cmd];\n        }\n      }\n      break;\n    \n    case 'master':\n      for (category in commands) {\n        // Skip god and builder commands.\n        if (category == 'god' || category == 'builder') {\n          continue;\n        }\n        \n        var curCategory = commands[category].descriptions;\n        \n        if (curCategory[cmd]) {\n          return curCategory[cmd];\n        }\n      }\n      break;\n    \n    case 'player':\n      for (var category in commands) {\n        // Skip god, builder, and master commands.\n        if (category == 'god' || category == 'builder' || category == 'master') {\n          continue;\n        }\n        \n        var curCategory = commands[category].descriptions;\n        \n        if (curCategory[cmd]) {\n          return curCategory[cmd];\n        }\n      }\n      break;\n    \n    case 'user':\n      var curCategory = commands['user'];\n      \n      if (curCategory[cmd]) {\n        return curCategory[cmd];\n      }\n      break;\n    \n    default:\n      // Same as 'god', when no access argument.\n      for (var category in commands) {\n        var curCategory = commands[category];\n        \n        if (curCategory[cmd]) {\n          return curCategory[cmd];\n        }\n      }\n  }\n  \n  // Otherwise, command not found.\n  return false;\n}\n\n//*** EXPORTS ***//\n  exports.upperFirst        =   upperFirst;\n  exports.toType            =   toType;\n  exports.strPos            =   strPos;\n  exports.objDotted         =   objDotted;\n  exports.updateObj         =   updateObj;\n  exports.copyObj           =   copyObj;\n  exports.hasProperty       =   hasProperty;\n  exports.caseName          =   caseName;\n  exports.parseName         =   parseName;\n  exports.fullName          =   fullName;\n  exports.fullNameID        =   fullNameID;\n  exports.parseUsername     =   parseUsername;\n  exports.posDir            =   posDir;\n  exports.strTarget         =   strTarget;\n  exports.parseTarget       =   parseTarget;\n  exports.verifyWearable    =   verifyWearable;\n  exports.locationEmpty     =   locationEmpty;\n  exports.updateUser        =   updateUser;\n  exports.commandExists     =   commandExists;\n// *** //",
			"file": "operations.js",
			"file_size": 15443,
			"file_write_time": 130362257086845224,
			"settings":
			{
				"buffer_size": 14935,
				"line_ending": "Windows"
			}
		},
		{
			"file": "backupcode.js",
			"settings":
			{
				"buffer_size": 9289,
				"line_ending": "Windows"
			}
		},
		{
			"file": "codeguide",
			"settings":
			{
				"buffer_size": 3538,
				"line_ending": "Windows"
			}
		},
		{
			"file": "codenotes",
			"settings":
			{
				"buffer_size": 33,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 311.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"node",
				"Nodejs::Default File Settings"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 176.0,
		"history":
		[
			"ls",
			".h",
			"h",
			"-help",
			"--help",
			"help",
			"PackageResourceViewer: View Package Resource",
			"PackageResourceViewer: Open Resource",
			"PackageResourceViewer",
			"open resource Default.package-sublime",
			"open resource",
			"PackageResourceViewer: Open Resource",
			"which node",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Phuein/Desktop/DIY/package.json",
		"/C/Users/Phuein/Desktop/DIY/server.js",
		"/C/Users/Phuein/Desktop/DIY/commands.js",
		"/C/Users/Phuein/AppData/Local/Temp/fz3temp-1/.htaccess",
		"/C/Users/Phuein/Desktop/NodeWorld/server.js",
		"/C/Users/Phuein/Desktop/DIY/views/index.html",
		"/C/Users/Phuein/Desktop/DIY/routes/index.js",
		"/C/Users/Phuein/Desktop/NodeWorldDIY/commands.js",
		"/C/Users/Phuein/Desktop/NodeWorldDIY/views/index.html",
		"/C/Users/Phuein/Desktop/NodeWorldDIY/server.js",
		"/C/Users/Phuein/Desktop/NodeWorldDIY/package.json",
		"/C/Users/Phuein/Desktop/NodeWorldDIY/deplist.txt",
		"/C/Users/Phuein/Desktop/NodeWorld/commands.js",
		"/C/Users/Phuein/Desktop/NodeWorld/package.json",
		"/C/Users/Phuein/Desktop/NodeWorld/views/index.html",
		"/C/Users/Phuein/Desktop/Server/package.json",
		"/C/Users/Phuein/Desktop/Server/README.md",
		"/C/Users/Phuein/Desktop/Server/creationFunctions.js",
		"/C/Users/Phuein/Desktop/Server/commandFunctions.js",
		"/C/Users/Phuein/Desktop/gamenotes.txt",
		"/C/Users/Phuein/Desktop/Server/commands.js",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Phuein/Desktop/Server/codeguide.txt",
		"/C/Users/Phuein/Downloads/VMware Workstation 10.0.1 Build 1379776/keys.txt",
		"/C/Users/Phuein/Downloads/VMware Workstation 10.0.1 Build 1379776/VMware10.0.1-1379776.txt",
		"/C/Users/Phuein/Desktop/Server/operations.js",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Phuein/Desktop/Server/app.js",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Phuein/Downloads/joomla/htaccess.txt",
		"/C/Users/Phuein/Downloads/joomla/README.txt",
		"/C/Users/Phuein/AppData/Local/Temp/fz3temp-1/wp-settings.php",
		"/C/Users/Phuein/AppData/Local/Temp/fz3temp-1/wp-config.php",
		"/C/Users/Phuein/Downloads/facebookall.1.4/facebookall/readme.txt",
		"/C/Program Files (x86)/ActiveState Komodo IDE 8/LICENSE.txt",
		"/C/Users/Phuein/Downloads/ActiveState Komodo IDE 8.5.3.83298+Keymaker-BEAN/readme.txt",
		"/C/Users/Phuein/Downloads/ActiveState Komodo IDE 8.5.3.83298+Keymaker-BEAN/KeyGen/ActiveState.lic",
		"/C/Users/Phuein/Downloads/VideoPad Video Editor Pro 3.14+Crack-casper/readme.txt",
		"/C/Users/Phuein/AppData/Local/Temp/7zO2E3D.tmp/index.js",
		"/C/Users/Phuein/Downloads/Blue Jasmine 2013 WEBRIP. Jaybob/Important October 22, 2012 Please Read.txt",
		"/C/Users/Phuein/Downloads/Blue.Jasmine.2013.DVDRip/ReadMe.txt",
		"/C/Users/Phuein/Documents/SublimeTextBackups/2013-12-17/C/Users/Phuein/Desktop/Server/app_232319.js",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Installed Packages/Monokai Extended Bright.tmTheme",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/Monokaified.tmTheme",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/Monokai Extended Bright.tmTheme",
		"/C/Users/Phuein/AppData/Local/Temp/7zOAAFB.tmp/Monokai Extended Bright.tmTheme",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Installed Packages/Monokai Extended.sublime-package",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/Monokai.tmTheme",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/PackageResourceViewer/README.md",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/User/PackageResourceViewer.sublime-settings",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/PackageResourceViewer/PackageResourceViewer.sublime-settings",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/User/theme_tweaker.sublime-settings",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/ThemeTweaker/theme_tweaker.sublime-settings",
		"/C/Program Files/Sublime Text 3/Packages/Theme - Default.sublime-package",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/User/Distraction Free.sublime-settings",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/User/JavaScript.sublime-settings",
		"/C/Users/Phuein/Desktop/Server/routes/user.js",
		"/C/Users/Phuein/Desktop/Server/node_modules/connect/Readme.md",
		"/C/Users/Phuein/Desktop/Server/node_modules/connect/index.js",
		"/C/Users/Phuein/Desktop/Server/routes/index.js",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/Nodejs/Nodejs.sublime-settings",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Installed Packages/Nodejs.sublime-package",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/User/Nodejs.sublime-settings",
		"/C/Users/Phuein/Desktop/cleaninglady.txt",
		"/C/Users/Phuein/Desktop/notes.txt",
		"/C/Users/Phuein/Desktop/Server/test/app.js",
		"/C/Users/Phuein/Desktop/Server/test/package.json",
		"/C/Users/Phuein/Desktop/Server/test/public/stylesheets/style.css",
		"/C/Program Files/nodejs/node_modules/npm/html/doc/cli/npm-uninstall.html",
		"/C/Users/Phuein/Desktop/Server/server.js",
		"/C/Users/Phuein/Desktop/Server/views/index.jade",
		"/C/Users/Phuein/Desktop/Server/public/index.html",
		"/C/Users/Phuein/Desktop/Server/test/routes/index.js",
		"/C/Users/Phuein/Desktop/Server/test/views/index.jade",
		"/C/Users/Phuein/Desktop/Server/public/js/socket.io/index.js",
		"/C/Users/Phuein/Desktop/Server/node_modules/socket.io/index.js",
		"/C/Users/Phuein/Desktop/Server/public/js/socket.io/lib/socket.io.js",
		"/C/Users/Phuein/Desktop/Server/public/js/socket.io/package.json",
		"/C/Users/Phuein/Desktop/Server/public/js/socketio/socket.io.js",
		"/C/Users/Phuein/Desktop/Server/public/js/socket.io.js",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/User/AutoBackups (Windows).sublime-settings",
		"/C/Users/Phuein/AppData/Roaming/Sublime Text 3/Packages/AutoBackups/AutoBackups (Windows).sublime-settings"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"availableHand",
			"holdTarget",
			"user.room.position",
			"substring",
			"locateItem(",
			"locateItem",
			"command.",
			"Type(",
			"operations.",
			".remove",
			"commands",
			"(!user.player.worn)",
			"(user.player.worn)",
			"capFirst",
			"caseUsername",
			"updateObj",
			" in ",
			"operations",
			"updateObj",
			"stringifyTarget",
			"directionToPosition",
			"updateObject",
			"dottedToObject",
			"stringifyPosition",
			"toType",
			"capFirst",
			".capitalize",
			"handleCommands('commands'",
			"1",
			"2",
			".capitalize",
			"removeTarget",
			"remove",
			"'['",
			"differentUsername",
			"world.users",
			"world.watch",
			"/(?!account).username/",
			"/(^account).username/g",
			"/(^account).username/",
			"world.watch",
			"playerObject",
			"socket",
			"updateUser",
			"world.watch",
			"user.rooms.current",
			"$exists",
			"lastinstance",
			"= {}",
			"$exists",
			"$exists'",
			"$exists",
			"+ '.' +",
			"stringifyTarget(target)",
			"+ '.' +",
			"fixUsername",
			"world.watch",
			"parseObject",
			"weight",
			"size",
			"stringPosition",
			"new",
			"fold",
			"theme",
			"strCoords",
			"'x'",
			"str",
			"updateUser",
			"user",
			"session",
			"function(",
			"function (",
			"function",
			"current.play",
			"players.length",
			"options",
			".watch",
			".players",
			"world.users",
			"].socket",
			".socket",
			".players[",
			"var strO",
			"world.users",
			"roomsdb",
			"world.maps",
			"playerObject",
			"player",
			"indexOf",
			"db.",
			"listen",
			"Add to changed",
			"ensur",
			"mapID",
			"{'username':",
			"{ 'username':",
			"{ 'user",
			"'sort'",
			"players",
			"user.rooms.current.mapID",
			"loadRoom(",
			"createRoom(",
			"user.rooms.current",
			"processRoom(user",
			"applyRoom",
			".find",
			"console.log(err)",
			"watch",
			"load",
			"count()",
			"player.username",
			"account.name",
			"user.name",
			"console.log",
			".capitalize",
			" username ",
			"collection",
			"express",
			"createServer"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"strTarget",
			"strPos",
			"user.room",
			"caseUsername",
			"dottedToObject",
			"stringPosition",
			"function ("
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11163,
						"regions":
						{
						},
						"selection":
						[
							[
								9900,
								9900
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "commands.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68806,
						"regions":
						{
						},
						"selection":
						[
							[
								27973,
								27973
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "playerFunctions.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19540,
						"regions":
						{
						},
						"selection":
						[
							[
								43,
								43
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "adminFunctions.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13890,
						"regions":
						{
						},
						"selection":
						[
							[
								99,
								99
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "operations.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14935,
						"regions":
						{
						},
						"selection":
						[
							[
								316,
								316
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "backupcode.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9289,
						"regions":
						{
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "codeguide",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3538,
						"regions":
						{
						},
						"selection":
						[
							[
								203,
								203
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "codenotes",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33,
						"regions":
						{
						},
						"selection":
						[
							[
								33,
								33
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.710834553441,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 124.0
	},
	"output.unsaved_changes":
	{
		"height": 118.0
	},
	"project": "server.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
